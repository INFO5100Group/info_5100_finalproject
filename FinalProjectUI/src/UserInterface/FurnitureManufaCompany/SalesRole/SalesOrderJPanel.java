/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.FurnitureManufaCompany.SalesRole;

import Business.Account.Account;
import Business.Enterprise.Enterprise;
import Business.Role.RoleType;
import Business.WorkQueue.WorkRequest;
import EcoSystem.EcoSystem;
import System.Configure.DB4OUtil;
import java.awt.Color;
import java.awt.Font;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import org.json.JSONObject;

/**
 *
 * @author Administrator
 */
public class SalesOrderJPanel extends javax.swing.JPanel {
    private JPanel UserProcessContainer;
    
    private Account account;
    private EcoSystem system;
    /**
     * Creates new form SalesOrderJPanel
     */
    public SalesOrderJPanel() {
        initComponents();
        OrderJTable.getTableHeader().setFont(new Font("Yu Gothic UI Light" , Font.BOLD , 15));
        DefaultTableCellRenderer cellRenderer = new DefaultTableCellRenderer();
        cellRenderer.setBackground(new Color(74,192,255));
        for(int i=0;i<6;i++){
            TableColumn column = OrderJTable.getTableHeader().getColumnModel().getColumn(i);
             column.setHeaderRenderer(cellRenderer);
        }
        setButtonImage();
    }

    public SalesOrderJPanel(Account account, EcoSystem system) {
        this();
        this.account = account;
        this.system = system;
        populateTable();
        populateCombo();
    }
    
    public void populateCombo() {
        LogisticCompanyCombo.removeAllItems();
        LogisticCompanyCombo.addItem("Select Logistic Company");
        for (Enterprise e : system.getEnterprises()) {
            if (e.getAdmin().getRole().rType == RoleType.LogisticAdmin) {
                LogisticCompanyCombo.addItem(e.getName() + "(" + e.getID() + ")");
            }
        }
    }

    public int getEnterpriseID(String str) {
        String IDstr = str.substring(str.indexOf("(") + 1, str.indexOf(")"));
        return Integer.parseInt(IDstr);
    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) this.OrderJTable.getModel();
        model.setRowCount(0);
        for (WorkRequest wr : system.getWorkQueue()) {
            if (wr.getSender() == this.account) {
                Object row[] = new Object[6];
                ArrayList<Account> list = new ArrayList<>(wr.getReceivers().keySet());
                JSONObject currInfo = new JSONObject(wr.getMessage());
                try {
                    row[1] = system.getEnterprises().getEnterpriseByAccout(
                            (new ArrayList<>(wr.getReceivers().keySet())).get(0)
                    ).getName();
                } catch (Exception e) {
                    row[1] = (new ArrayList<>(wr.getReceivers().keySet())).get(0);
                }

                row[2] = currInfo.getString("Product");
                row[3] = currInfo.getString("TotalPrice");
                try {
                    row[4] = system.getEnterprises().getEnterpriseByAccout(
                            (new ArrayList<>(wr.getReceivers().keySet())).get(1)
                    ).getName();
                } catch (Exception e) {
                }
                row[5] = wr.getStatus();
                row[0] = wr;
                model.addRow(row);
            }
        }
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LogisticCompanyCombo = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        OrderJTable = new javax.swing.JTable();
        btnDistribute = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        LogisticCompanyCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        OrderJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "OrderID", "EnterpriseName", "ProductName", "TotalPrice", "LogisticCompany", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        OrderJTable.setFocusable(false);
        OrderJTable.setRowHeight(25);
        OrderJTable.setRowMargin(0);
        OrderJTable.setSelectionBackground(new java.awt.Color(102, 204, 255));
        OrderJTable.setShowVerticalLines(false);
        jScrollPane3.setViewportView(OrderJTable);

        btnDistribute.setIcon(new javax.swing.ImageIcon("C:\\Users\\Administrator\\Desktop\\东北大学\\INFO5100\\正课\\Final Project\\info_5100_finalproject\\FinalProjectUI\\image\\distribute.png")); // NOI18N
        btnDistribute.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnDistribute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDistributeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(615, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addComponent(btnDistribute, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(300, 300, 300)
                        .addComponent(LogisticCompanyCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 921, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(295, 295, 295)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LogisticCompanyCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDistribute, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(369, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDistributeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDistributeActionPerformed
        int selectedRow = this.OrderJTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "please select a row");
            return;
        } else if (LogisticCompanyCombo.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "please select a logistic company");
            return;
        } else {
            Enterprise logistic = system.getEnterprises().getEnterPriseByID(getEnterpriseID(LogisticCompanyCombo.getSelectedItem() + ""));
            WorkRequest wr = (WorkRequest) OrderJTable.getValueAt(selectedRow, 0);
            try {
                (new ArrayList<>(wr.getReceivers().keySet())).get(1);
            } catch (java.lang.IndexOutOfBoundsException e) {
                wr.getReceivers().put(logistic.getAdmin(), false);
                DB4OUtil.storeSystem(system);
                populateTable();
                return;
            }
            JOptionPane.showMessageDialog(null, "Already have a logistic company, cannot set another one");
            return;
        }
    }//GEN-LAST:event_btnDistributeActionPerformed
    private void setButtonImage(){
         ImageIcon distribute=new ImageIcon("./image/distribute.png");
         btnDistribute.setIcon(distribute);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> LogisticCompanyCombo;
    private javax.swing.JTable OrderJTable;
    private javax.swing.JButton btnDistribute;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
